{"ast":null,"code":"import axios from 'axios';\nimport cheerio from 'cheerio';\nexport default (async (req, res) => {\n  const {\n    method,\n    query\n  } = req;\n\n  switch (method) {\n    case 'GET':\n      try {\n        /*\r\n        const response = await axios({\r\n          headers: {\r\n            \"x-api-key\": \"0c63e893-4bc0-44ca\",\r\n          },\r\n          url: \"/detail\",\r\n          method: \"get\",\r\n          baseURL:'https://ecomapp.io/data',\r\n          params: {\r\n            url: query.url,\r\n            ecom: query.ecom,\r\n            product_id: 0,\r\n            db_entry: 0,\r\n          },\r\n        });\r\n        */\n        const {\n          response\n        } = await axios.post(query.url);\n        console.log(response);\n        const $ = cheerio.load(response);\n        let images = [];\n        $('.slider-frame .slider-list li').each((i, li) => {\n          let img = $(li).find('img').attr('src');\n          let image = img.match(/.*?[?!.]/g);\n          images.push(image[0]);\n        });\n        const products = {\n          product_title: $('h1.prod-ProductTitle').text(),\n          description: $('div.about-product-standard').html(),\n          product_price: $('.prod-PriceHero span.price-characteristic').text(),\n          currency: {\n            currency_type: $('.prod-PriceHero span.price-currency').attr('content'),\n            currency_sign: $('.prod-PriceHero span.price-currency').text()\n          },\n          images: images\n        };\n        res.status(200).json({\n          success: true,\n          productDetail: {}\n        });\n      } catch (error) {\n        res.status(400).json({\n          success: false\n        });\n      }\n\n      break;\n\n    case 'POST':\n      try {\n        const product = {};\n        res.status(201).json({\n          success: true,\n          data: product\n        });\n      } catch (error) {\n        res.status(400).json({\n          success: false\n        });\n      }\n\n      break;\n\n    default:\n      res.status(400).json({\n        success: false\n      });\n      break;\n  }\n});","map":{"version":3,"sources":["E:/novostack/shopify/apps/ns-nextjs-shopify/pages/api/scrap-product-detail/index.js"],"names":["axios","cheerio","req","res","method","query","response","post","url","console","log","$","load","images","each","i","li","img","find","attr","image","match","push","products","product_title","text","description","html","product_price","currency","currency_type","currency_sign","status","json","success","productDetail","error","product","data"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,SAApB;AAEA,gBAAe,OAAOC,GAAP,EAAWC,GAAX,KAAmB;AAC9B,QAAM;AAACC,IAAAA,MAAD;AAAQC,IAAAA;AAAR,MAAiBH,GAAvB;;AACA,UAAOE,MAAP;AACI,SAAK,KAAL;AACI,UAAG;AACC;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEgB,cAAM;AAACE,UAAAA;AAAD,YAAa,MAAMN,KAAK,CAACO,IAAN,CAAWF,KAAK,CAACG,GAAjB,CAAzB;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAZ;AAEA,cAAMK,CAAC,GAAGV,OAAO,CAACW,IAAR,CAAaN,QAAb,CAAV;AACA,YAAIO,MAAM,GAAG,EAAb;AACAF,QAAAA,CAAC,CAAC,+BAAD,CAAD,CAAmCG,IAAnC,CAAwC,CAACC,CAAD,EAAGC,EAAH,KAAU;AAC9C,cAAIC,GAAG,GAAGN,CAAC,CAACK,EAAD,CAAD,CAAME,IAAN,CAAW,KAAX,EAAkBC,IAAlB,CAAuB,KAAvB,CAAV;AACA,cAAIC,KAAK,GAAGH,GAAG,CAACI,KAAJ,CAAU,WAAV,CAAZ;AACAR,UAAAA,MAAM,CAACS,IAAP,CAAYF,KAAK,CAAC,CAAD,CAAjB;AACH,SAJD;AAKA,cAAMG,QAAQ,GAAG;AACbC,UAAAA,aAAa,EAAGb,CAAC,CAAC,sBAAD,CAAD,CAA0Bc,IAA1B,EADH;AAEbC,UAAAA,WAAW,EAACf,CAAC,CAAC,4BAAD,CAAD,CAAgCgB,IAAhC,EAFC;AAGbC,UAAAA,aAAa,EAACjB,CAAC,CAAC,2CAAD,CAAD,CAA+Cc,IAA/C,EAHD;AAIbI,UAAAA,QAAQ,EAAC;AACLC,YAAAA,aAAa,EAACnB,CAAC,CAAC,qCAAD,CAAD,CAAyCQ,IAAzC,CAA8C,SAA9C,CADT;AAELY,YAAAA,aAAa,EAACpB,CAAC,CAAC,qCAAD,CAAD,CAAyCc,IAAzC;AAFT,WAJI;AAQbZ,UAAAA,MAAM,EAACA;AARM,SAAjB;AAWAV,QAAAA,GAAG,CAAC6B,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAACC,UAAAA,OAAO,EAAC,IAAT;AAAcC,UAAAA,aAAa,EAAC;AAA5B,SAArB;AACH,OAxCD,CAwCC,OAAMC,KAAN,EAAY;AACTjC,QAAAA,GAAG,CAAC6B,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAACC,UAAAA,OAAO,EAAC;AAAT,SAArB;AACH;;AACD;;AACJ,SAAK,MAAL;AACI,UAAG;AACC,cAAMG,OAAO,GAAG,EAAhB;AAEAlC,QAAAA,GAAG,CAAC6B,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAACC,UAAAA,OAAO,EAAC,IAAT;AAAcI,UAAAA,IAAI,EAACD;AAAnB,SAArB;AAEH,OALD,CAKC,OAAMD,KAAN,EAAY;AACTjC,QAAAA,GAAG,CAAC6B,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAACC,UAAAA,OAAO,EAAC;AAAT,SAArB;AACH;;AACD;;AACJ;AACI/B,MAAAA,GAAG,CAAC6B,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAACC,QAAAA,OAAO,EAAC;AAAT,OAArB;AACA;AA1DR;AA4DH,CA9DD","sourcesContent":["import axios from 'axios';\r\nimport cheerio from 'cheerio';\r\n\r\nexport default async (req,res) => {\r\n    const {method,query} = req;\r\n    switch(method){\r\n        case 'GET':\r\n            try{\r\n                /*\r\n                const response = await axios({\r\n                  headers: {\r\n                    \"x-api-key\": \"0c63e893-4bc0-44ca\",\r\n                  },\r\n                  url: \"/detail\",\r\n                  method: \"get\",\r\n                  baseURL:'https://ecomapp.io/data',\r\n                  params: {\r\n                    url: query.url,\r\n                    ecom: query.ecom,\r\n                    product_id: 0,\r\n                    db_entry: 0,\r\n                  },\r\n                });\r\n                */\r\n               \r\n                const {response} = await axios.post(query.url)\r\n                console.log(response)\r\n                \r\n                const $ = cheerio.load(response)\r\n                let images = [];\r\n                $('.slider-frame .slider-list li').each((i,li) => {\r\n                    let img = $(li).find('img').attr('src')\r\n                    let image = img.match(/.*?[?!.]/g);\r\n                    images.push(image[0])\r\n                })\r\n                const products = {\r\n                    product_title : $('h1.prod-ProductTitle').text(),\r\n                    description:$('div.about-product-standard').html(),\r\n                    product_price:$('.prod-PriceHero span.price-characteristic').text(),\r\n                    currency:{\r\n                        currency_type:$('.prod-PriceHero span.price-currency').attr('content'),\r\n                        currency_sign:$('.prod-PriceHero span.price-currency').text()\r\n                    },\r\n                    images:images\r\n                }\r\n            \r\n                res.status(200).json({success:true,productDetail:{}})\r\n            }catch(error){\r\n                res.status(400).json({success:false})\r\n            }\r\n            break;\r\n        case 'POST':\r\n            try{\r\n                const product = {}\r\n\r\n                res.status(201).json({success:true,data:product})\r\n\r\n            }catch(error){\r\n                res.status(400).json({success:false})\r\n            }\r\n            break;\r\n        default:\r\n            res.status(400).json({success:false})\r\n            break;\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}