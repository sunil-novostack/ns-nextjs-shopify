{"ast":null,"code":"import axios from 'axios';\nimport cheerio from 'cheerio';\nimport Request from 'request';\nexport default (async (req, res) => {\n  const {\n    method,\n    headers,\n    query\n  } = req;\n\n  switch (method) {\n    case 'GET':\n      try {\n        /*\r\n        const response = await axios({\r\n          headers: {\r\n            \"x-api-key\": \"0c63e893-4bc0-44ca\",\r\n          },\r\n          url: \"/detail\",\r\n          method: \"get\",\r\n          baseURL:'https://ecomapp.io/data',\r\n          params: {\r\n            url: query.url,\r\n            ecom: query.ecom,\r\n            product_id: 0,\r\n            db_entry: 0,\r\n          },\r\n        });\r\n        */\n        request('https://news.ycombinator.com', function (error, response, html) {\n          if (!error && response.statusCode == 200) {\n            var $ = cheerio.load(html);\n            console.log(html);\n          }\n        });\n        console.log(response);\n        /*\r\n        const $ = cheerio.load(response)\r\n        let images = [];\r\n        $('.slider-frame .slider-list li').each((i,li) => {\r\n            let img = $(li).find('img').attr('src')\r\n            let image = img.match(/.*?[?!.]/g);\r\n            images.push(image[0])\r\n        })\r\n        const products = {\r\n            product_title : $('h1.prod-ProductTitle').text(),\r\n            description:$('div.about-product-standard').html(),\r\n            product_price:$('.prod-PriceHero span.price-characteristic').text(),\r\n            currency:{\r\n                currency_type:$('.prod-PriceHero span.price-currency').attr('content'),\r\n                currency_sign:$('.prod-PriceHero span.price-currency').text()\r\n            },\r\n            images:images\r\n        }\r\n        */\n\n        res.status(200).json({\n          success: true,\n          productDetail: {}\n        });\n      } catch (error) {\n        res.status(400).json({\n          success: false,\n          err: error\n        });\n      }\n\n      break;\n\n    case 'POST':\n      try {\n        const product = {};\n        res.status(201).json({\n          success: true,\n          data: product\n        });\n      } catch (error) {\n        res.status(400).json({\n          success: false\n        });\n      }\n\n      break;\n\n    default:\n      res.status(400).json({\n        success: false\n      });\n      break;\n  }\n});","map":{"version":3,"sources":["E:/novostack/shopify/apps/ns-nextjs-shopify/pages/api/scrap-product-detail/index.js"],"names":["axios","cheerio","Request","req","res","method","headers","query","request","error","response","html","statusCode","$","load","console","log","status","json","success","productDetail","err","product","data"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,SAApB;AACA,OAAOC,OAAP,MAAoB,SAApB;AAEA,gBAAe,OAAOC,GAAP,EAAWC,GAAX,KAAmB;AAC9B,QAAM;AAACC,IAAAA,MAAD;AAAQC,IAAAA,OAAR;AAAgBC,IAAAA;AAAhB,MAAyBJ,GAA/B;;AACA,UAAOE,MAAP;AACI,SAAK,KAAL;AACI,UAAG;AACC;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACeG,QAAAA,OAAO,CAAC,8BAAD,EAAiC,UAAUC,KAAV,EAAiBC,QAAjB,EAA2BC,IAA3B,EAAiC;AACxE,cAAI,CAACF,KAAD,IAAUC,QAAQ,CAACE,UAAT,IAAuB,GAArC,EAA0C;AACtC,gBAAIC,CAAC,GAAGZ,OAAO,CAACa,IAAR,CAAaH,IAAb,CAAR;AACAI,YAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ;AACH;AACA,SALK,CAAP;AAMCI,QAAAA,OAAO,CAACC,GAAR,CAAYN,QAAZ;AACA;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACgBN,QAAAA,GAAG,CAACa,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAACC,UAAAA,OAAO,EAAC,IAAT;AAAcC,UAAAA,aAAa,EAAC;AAA5B,SAArB;AACH,OA5CD,CA4CC,OAAMX,KAAN,EAAY;AACTL,QAAAA,GAAG,CAACa,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAACC,UAAAA,OAAO,EAAC,KAAT;AAAeE,UAAAA,GAAG,EAACZ;AAAnB,SAArB;AACH;;AACD;;AACJ,SAAK,MAAL;AACI,UAAG;AACC,cAAMa,OAAO,GAAG,EAAhB;AAEAlB,QAAAA,GAAG,CAACa,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAACC,UAAAA,OAAO,EAAC,IAAT;AAAcI,UAAAA,IAAI,EAACD;AAAnB,SAArB;AAEH,OALD,CAKC,OAAMb,KAAN,EAAY;AACTL,QAAAA,GAAG,CAACa,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAACC,UAAAA,OAAO,EAAC;AAAT,SAArB;AACH;;AACD;;AACJ;AACIf,MAAAA,GAAG,CAACa,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAACC,QAAAA,OAAO,EAAC;AAAT,OAArB;AACA;AA9DR;AAgEH,CAlED","sourcesContent":["import axios from 'axios';\r\nimport cheerio from 'cheerio';\r\nimport Request from 'request';\r\n\r\nexport default async (req,res) => {\r\n    const {method,headers,query} = req;\r\n    switch(method){\r\n        case 'GET':\r\n            try{\r\n                /*\r\n                const response = await axios({\r\n                  headers: {\r\n                    \"x-api-key\": \"0c63e893-4bc0-44ca\",\r\n                  },\r\n                  url: \"/detail\",\r\n                  method: \"get\",\r\n                  baseURL:'https://ecomapp.io/data',\r\n                  params: {\r\n                    url: query.url,\r\n                    ecom: query.ecom,\r\n                    product_id: 0,\r\n                    db_entry: 0,\r\n                  },\r\n                });\r\n                */\r\n               request('https://news.ycombinator.com', function (error, response, html) {\r\n                if (!error && response.statusCode == 200) {\r\n                    var $ = cheerio.load(html);\r\n                    console.log(html)\r\n                }\r\n                });\r\n                console.log(response)\r\n                /*\r\n                const $ = cheerio.load(response)\r\n                let images = [];\r\n                $('.slider-frame .slider-list li').each((i,li) => {\r\n                    let img = $(li).find('img').attr('src')\r\n                    let image = img.match(/.*?[?!.]/g);\r\n                    images.push(image[0])\r\n                })\r\n                const products = {\r\n                    product_title : $('h1.prod-ProductTitle').text(),\r\n                    description:$('div.about-product-standard').html(),\r\n                    product_price:$('.prod-PriceHero span.price-characteristic').text(),\r\n                    currency:{\r\n                        currency_type:$('.prod-PriceHero span.price-currency').attr('content'),\r\n                        currency_sign:$('.prod-PriceHero span.price-currency').text()\r\n                    },\r\n                    images:images\r\n                }\r\n                */\r\n                res.status(200).json({success:true,productDetail:{} })\r\n            }catch(error){\r\n                res.status(400).json({success:false,err:error})\r\n            }\r\n            break;\r\n        case 'POST':\r\n            try{\r\n                const product = {}\r\n\r\n                res.status(201).json({success:true,data:product})\r\n\r\n            }catch(error){\r\n                res.status(400).json({success:false})\r\n            }\r\n            break;\r\n        default:\r\n            res.status(400).json({success:false})\r\n            break;\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}