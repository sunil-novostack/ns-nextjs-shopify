{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"E:\\\\novostack\\\\shopify\\\\apps\\\\ns-nextjs-shopify\\\\components\\\\FbConnect.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { Layout, AccountConnection, Link, Form, FormLayout } from '@shopify/polaris';\nimport Cookies from 'js-cookie';\nimport FacebookLogin from \"react-facebook-login\";\nimport graph from \"fb-react-sdk\";\n\nvar FbConnect = /*#__PURE__*/function (_React$Component) {\n  _inherits(FbConnect, _React$Component);\n\n  var _super = _createSuper(FbConnect);\n\n  function FbConnect(props) {\n    var _this;\n\n    _classCallCheck(this, FbConnect);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"responseFacebook\", function (response) {\n      console.log(response);\n\n      _this.setState({\n        accessToken: response.accessToken\n      });\n\n      graph.setAccessToken(response.accessToken);\n      /*\r\n      graph.get(response.id + \"/businesses\", function (err, res) {\r\n          console.log(res); \r\n          let businessId = res.data[0].id;\r\n          graph.get(businessId + \"/owned_product_catalogs\", function (err, res) {\r\n              let catalogId= res.data[0].id;\r\n              console.log(res);\r\n              graph.get(catalogId + \"/products\", function (err, res) {\r\n              console.log(res);\r\n              });\r\n          });\r\n      });\r\n      */\n    });\n\n    _this.state = {\n      connected: Cookies.get('FBConnect') ? true : false\n    };\n    return _this;\n  }\n\n  _createClass(FbConnect, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/_jsxDEV(Form, {\n        method: \"post\",\n        children: /*#__PURE__*/_jsxDEV(FormLayout, {\n          children: /*#__PURE__*/_jsxDEV(Layout.AnnotatedSection, {\n            title: \"FB Commerce\",\n            description: \"Connect to your Facebook Commerce and manage all items from here\",\n            children: this.accountConnectionMarkup()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this);\n    }\n  }, {\n    key: \"toggleConnection\",\n    value: function toggleConnection() {//this.setState( ({connected}) => ({connected:!connected}) );\n      //fb login\n    }\n  }, {\n    key: \"accountConnectionMarkup\",\n    value: function accountConnectionMarkup() {\n      // return this.state.connected\n      // ?(\n      //     <AccountConnection\n      //         avatarUrl=\"Facebook Connected\"                \n      //         action={{content: 'Facebook Connected'}}\n      //         details={Cookies.get('FBConnect')}\n      //         connected={this.state.connected}\n      //         termsOfService={\n      //             <p>You are now Connected with your FB Commerce Find out what items / products listed or check out with export porduct to store</p>\n      //         }\n      //     />\n      // )\n      // :(\n      //     <AccountConnection\n      //         title=\"Connct To Facebook\"\n      //         action={{content: 'Connect Facebook',onAction: this.toggleConnection.bind(this)}}\n      //         details=\"No Account Connected\"\n      //         connected={this.state.connected}\n      //         termsOfService={\n      //             <p>By Clicking Connect, You are agree to accept our terms and condition's <Link url='#'>Terms And Conditions</Link> Its Completly Free to Use</p>\n      //         }\n      //     />\n      // )\n      return !this.state.accessToken ? /*#__PURE__*/_jsxDEV(FacebookLogin, {\n        appId: \"430021065016726\",\n        autoLoad: false,\n        fields: \"name,email,picture\",\n        scope: \"public_profile,email,business_management,pages_read_engagement,catalog_management\",\n        callback: this.responseFacebook\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Connected\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }, this);\n    }\n  }]);\n\n  return FbConnect;\n}(React.Component);\n\nexport { FbConnect as default };","map":{"version":3,"sources":["E:/novostack/shopify/apps/ns-nextjs-shopify/components/FbConnect.js"],"names":["React","Component","Layout","AccountConnection","Link","Form","FormLayout","Cookies","FacebookLogin","graph","FbConnect","props","response","console","log","setState","accessToken","setAccessToken","state","connected","get","accountConnectionMarkup","responseFacebook"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAAgC,OAAhC;AACA,SACIC,MADJ,EAEIC,iBAFJ,EAGIC,IAHJ,EAIIC,IAJJ,EAKIC,UALJ,QAMO,kBANP;AAOA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,aAAP,MAA0B,sBAA1B;AACA,OAAOC,KAAP,MAAkB,cAAlB;;IACqBC,S;;;;;AACjB,qBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AACd,8BAAMA,KAAN;;AADc,uEAyBD,UAACC,QAAD,EAAa;AAC1BC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;;AACA,YAAKG,QAAL,CAAc;AAACC,QAAAA,WAAW,EAAEJ,QAAQ,CAACI;AAAvB,OAAd;;AACAP,MAAAA,KAAK,CAACQ,cAAN,CAAqBL,QAAQ,CAACI,WAA9B;AACA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACK,KA1CiB;;AAEd,UAAKE,KAAL,GAAa;AACTC,MAAAA,SAAS,EAACZ,OAAO,CAACa,GAAR,CAAY,WAAZ,IAA2B,IAA3B,GAAkC;AADnC,KAAb;AAFc;AAKjB;;;;6BACO;AACJ,0BACQ,QAAC,IAAD;AAAM,QAAA,MAAM,EAAC,MAAb;AAAA,+BACI,QAAC,UAAD;AAAA,iCACI,QAAC,MAAD,CAAQ,gBAAR;AACI,YAAA,KAAK,EAAC,aADV;AAEI,YAAA,WAAW,EAAC,kEAFhB;AAAA,sBAIC,KAAKC,uBAAL;AAJD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADR;AAYH;;;uCACiB,CACd;AACA;AACH;;;8CAqBwB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAO,CAAC,KAAKH,KAAL,CAAWF,WAAZ,gBAGH,QAAC,aAAD;AACI,QAAA,KAAK,EAAC,iBADV;AAEI,QAAA,QAAQ,EAAE,KAFd;AAGI,QAAA,MAAM,EAAC,oBAHX;AAII,QAAA,KAAK,EAAC,mFAJV;AAKI,QAAA,QAAQ,EAAE,KAAKM;AALnB;AAAA;AAAA;AAAA;AAAA,cAHG,gBAaH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAbJ;AAgBH;;;;EArFkCtB,KAAK,CAACC,S;;SAAxBS,S","sourcesContent":["import React,{ Component } from 'react';\r\nimport { \r\n    Layout,\r\n    AccountConnection,\r\n    Link,\r\n    Form,\r\n    FormLayout,\r\n} from '@shopify/polaris';\r\nimport Cookies from 'js-cookie';\r\nimport FacebookLogin from \"react-facebook-login\";\r\nimport graph from \"fb-react-sdk\";\r\nexport default class FbConnect extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            connected:Cookies.get('FBConnect') ? true : false,\r\n        }\r\n    }\r\n    render(){\r\n        return(\r\n                <Form method=\"post\">\r\n                    <FormLayout>\r\n                        <Layout.AnnotatedSection\r\n                            title=\"FB Commerce\"\r\n                            description=\"Connect to your Facebook Commerce and manage all items from here\"\r\n                        >\r\n                        {this.accountConnectionMarkup()}\r\n                        </Layout.AnnotatedSection>\r\n                    </FormLayout>\r\n                </Form>\r\n        );\r\n    }\r\n    toggleConnection(){\r\n        //this.setState( ({connected}) => ({connected:!connected}) );\r\n        //fb login\r\n    }\r\n\r\n    responseFacebook=(response) =>{\r\n        console.log(response);\r\n        this.setState({accessToken: response.accessToken});\r\n        graph.setAccessToken(response.accessToken);\r\n        /*\r\n        graph.get(response.id + \"/businesses\", function (err, res) {\r\n            console.log(res); \r\n            let businessId = res.data[0].id;\r\n            graph.get(businessId + \"/owned_product_catalogs\", function (err, res) {\r\n                let catalogId= res.data[0].id;\r\n                console.log(res);\r\n                graph.get(catalogId + \"/products\", function (err, res) {\r\n                console.log(res);\r\n                });\r\n            });\r\n        });\r\n        */\r\n    }\r\n\r\n    accountConnectionMarkup(){\r\n        // return this.state.connected\r\n        // ?(\r\n        //     <AccountConnection\r\n        //         avatarUrl=\"Facebook Connected\"                \r\n        //         action={{content: 'Facebook Connected'}}\r\n        //         details={Cookies.get('FBConnect')}\r\n        //         connected={this.state.connected}\r\n        //         termsOfService={\r\n        //             <p>You are now Connected with your FB Commerce Find out what items / products listed or check out with export porduct to store</p>\r\n        //         }\r\n        //     />\r\n        // )\r\n        // :(\r\n        //     <AccountConnection\r\n        //         title=\"Connct To Facebook\"\r\n        //         action={{content: 'Connect Facebook',onAction: this.toggleConnection.bind(this)}}\r\n        //         details=\"No Account Connected\"\r\n        //         connected={this.state.connected}\r\n        //         termsOfService={\r\n        //             <p>By Clicking Connect, You are agree to accept our terms and condition's <Link url='#'>Terms And Conditions</Link> Its Completly Free to Use</p>\r\n        //         }\r\n        //     />\r\n        // )\r\n        return !this.state.accessToken\r\n        ?\r\n            (\r\n            <FacebookLogin\r\n                appId=\"430021065016726\"\r\n                autoLoad={false}\r\n                fields=\"name,email,picture\"\r\n                scope=\"public_profile,email,business_management,pages_read_engagement,catalog_management\"\r\n                callback={this.responseFacebook}\r\n            />\r\n            )\r\n        :\r\n            (\r\n            <button>Connected</button>\r\n            \r\n            );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}