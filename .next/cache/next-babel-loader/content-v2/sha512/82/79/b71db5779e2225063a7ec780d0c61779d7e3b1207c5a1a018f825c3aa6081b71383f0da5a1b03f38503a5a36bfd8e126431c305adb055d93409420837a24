{"ast":null,"code":"import { MongoClient } from 'mongodb';\nconst {\n  SHOPIFY_MONGO_URI,\n  SHOPIFY_MONGO_DB\n} = process.env;\nlet cached = global.mongo;\n\nif (!cached) {\n  cached = global.mongo = {\n    conn: null,\n    promise: null\n  };\n}\n\nexport async function connectToDatabase() {\n  if (cached.conn) {\n    return cached.conn;\n  }\n\n  if (!cached.promise) {\n    const opts = {\n      userNewUrlParse: true,\n      userUnifiedTopology: true\n    };\n    cached.promise = MongoClient.connect(SHOPIFY_MONGO_URI, opts).then(client => {\n      return {\n        client,\n        db: client.db(SHOPIFY_MONGO_DB)\n      };\n    });\n  }\n\n  cached.conn = await cached.promise;\n  return cached.conn;\n}","map":{"version":3,"sources":["E:/novostack/shopify/apps/ns-nextjs-shopify/lib/mongoose/dbCon.js"],"names":["MongoClient","SHOPIFY_MONGO_URI","SHOPIFY_MONGO_DB","process","env","cached","global","mongo","conn","promise","connectToDatabase","opts","userNewUrlParse","userUnifiedTopology","connect","then","client","db"],"mappings":"AAAA,SAAQA,WAAR,QAA0B,SAA1B;AAEA,MAAM;AAACC,EAAAA,iBAAD;AAAmBC,EAAAA;AAAnB,IAAuCC,OAAO,CAACC,GAArD;AACA,IAAIC,MAAM,GAAGC,MAAM,CAACC,KAApB;;AAEA,IAAG,CAACF,MAAJ,EAAW;AACPA,EAAAA,MAAM,GAAGC,MAAM,CAACC,KAAP,GAAe;AAAEC,IAAAA,IAAI,EAAE,IAAR;AAAaC,IAAAA,OAAO,EAAC;AAArB,GAAxB;AACH;;AAED,OAAO,eAAgBC,iBAAhB,GAAmC;AACtC,MAAGL,MAAM,CAACG,IAAV,EAAe;AACX,WAAOH,MAAM,CAACG,IAAd;AACH;;AACD,MAAG,CAACH,MAAM,CAACI,OAAX,EAAmB;AACf,UAAME,IAAI,GAAG;AACTC,MAAAA,eAAe,EAAC,IADP;AAETC,MAAAA,mBAAmB,EAAC;AAFX,KAAb;AAKAR,IAAAA,MAAM,CAACI,OAAP,GAAiBT,WAAW,CAACc,OAAZ,CAAoBb,iBAApB,EAAsCU,IAAtC,EAA4CI,IAA5C,CAAkDC,MAAD,IAAY;AAC1E,aAAO;AACHA,QAAAA,MADG;AAEHC,QAAAA,EAAE,EAACD,MAAM,CAACC,EAAP,CAAUf,gBAAV;AAFA,OAAP;AAIH,KALgB,CAAjB;AAMH;;AACDG,EAAAA,MAAM,CAACG,IAAP,GAAc,MAAMH,MAAM,CAACI,OAA3B;AACA,SAAOJ,MAAM,CAACG,IAAd;AACH","sourcesContent":["import {MongoClient} from 'mongodb';\r\n\r\nconst {SHOPIFY_MONGO_URI,SHOPIFY_MONGO_DB} = process.env\r\nlet cached = global.mongo\r\n\r\nif(!cached){\r\n    cached = global.mongo = { conn :null,promise:null }\r\n}\r\n\r\nexport async  function connectToDatabase(){\r\n    if(cached.conn){\r\n        return cached.conn\r\n    }\r\n    if(!cached.promise){\r\n        const opts = {\r\n            userNewUrlParse:true,\r\n            userUnifiedTopology:true,\r\n        }\r\n\r\n        cached.promise = MongoClient.connect(SHOPIFY_MONGO_URI,opts).then((client) => {\r\n            return {\r\n                client,\r\n                db:client.db(SHOPIFY_MONGO_DB)\r\n            }\r\n        })\r\n    }\r\n    cached.conn = await cached.promise\r\n    return cached.conn\r\n}"]},"metadata":{},"sourceType":"module"}