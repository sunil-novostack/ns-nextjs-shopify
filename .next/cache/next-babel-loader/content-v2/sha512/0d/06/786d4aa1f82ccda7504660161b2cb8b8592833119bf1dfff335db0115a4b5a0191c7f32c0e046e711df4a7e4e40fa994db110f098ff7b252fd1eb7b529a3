{"ast":null,"code":"import axios from 'axios';\nexport default (async (req, res) => {\n  //const deepai = require('deepai');\n  //deepai.setApiKey('257b469d-4d3f-4cbd-b834-3a98d4df40ae');\n  const {\n    method,\n    query\n  } = req;\n\n  switch (method) {\n    case 'GET':\n      try {\n        /*\r\n        const response = await deepai.callStandardApi(\"sentiment-analysis\",{\r\n            text : query.text\r\n        })\r\n        */\n        const response = await axios({\n          url: '/text-generator',\n          headers: {\n            \"api-key\": \"257b469d-4d3f-4cbd-b834-3a98d4df40ae\"\n          },\n          method: \"POST\",\n          baseURL: 'https://api.deepai.org/api',\n          data: req.body\n        });\n        res.status(200).json({\n          success: true,\n          suggest: response\n        });\n      } catch (error) {\n        console.log(error.response);\n        res.status(error.response.status).json({\n          success: false,\n          response\n        });\n      }\n\n      break;\n\n    case 'POST':\n      try {\n        const product = {};\n        res.status(201).json({\n          success: true,\n          data: product\n        });\n      } catch (error) {\n        res.status(400).json({\n          success: false\n        });\n      }\n\n      break;\n\n    default:\n      res.status(400).json({\n        success: false\n      });\n      break;\n  }\n});","map":{"version":3,"sources":["E:/novostack/shopify/apps/ns-nextjs-shopify/pages/api/deepai/index.js"],"names":["axios","req","res","method","query","response","url","headers","baseURL","data","body","status","json","success","suggest","error","console","log","product"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,gBAAe,OAAOC,GAAP,EAAWC,GAAX,KAAmB;AAC9B;AACA;AACA,QAAM;AAACC,IAAAA,MAAD;AAAQC,IAAAA;AAAR,MAAiBH,GAAvB;;AACA,UAAOE,MAAP;AACI,SAAK,KAAL;AACI,UAAG;AACC;AAChB;AACA;AACA;AACA;AACe,cAAME,QAAQ,GAAG,MAAML,KAAK,CAAC;AACxBM,UAAAA,GAAG,EAAC,iBADoB;AAExBC,UAAAA,OAAO,EAAE;AACL,uBAAW;AADN,WAFe;AAKxBJ,UAAAA,MAAM,EAAE,MALgB;AAMxBK,UAAAA,OAAO,EAAC,4BANgB;AAOxBC,UAAAA,IAAI,EAACR,GAAG,CAACS;AAPe,SAAD,CAA5B;AASCR,QAAAA,GAAG,CAACS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAACC,UAAAA,OAAO,EAAC,IAAT;AAAcC,UAAAA,OAAO,EAACT;AAAtB,SAArB;AACH,OAhBD,CAgBC,OAAMU,KAAN,EAAY;AACTC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACV,QAAlB;AACAH,QAAAA,GAAG,CAACS,MAAJ,CAAWI,KAAK,CAACV,QAAN,CAAeM,MAA1B,EAAkCC,IAAlC,CAAuC;AAACC,UAAAA,OAAO,EAAC,KAAT;AAAeR,UAAAA;AAAf,SAAvC;AACH;;AACD;;AACJ,SAAK,MAAL;AACI,UAAG;AACC,cAAMa,OAAO,GAAG,EAAhB;AAEAhB,QAAAA,GAAG,CAACS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAACC,UAAAA,OAAO,EAAC,IAAT;AAAcJ,UAAAA,IAAI,EAACS;AAAnB,SAArB;AAEH,OALD,CAKC,OAAMH,KAAN,EAAY;AACTb,QAAAA,GAAG,CAACS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAACC,UAAAA,OAAO,EAAC;AAAT,SAArB;AACH;;AACD;;AACJ;AACIX,MAAAA,GAAG,CAACS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAACC,QAAAA,OAAO,EAAC;AAAT,OAArB;AACA;AAnCR;AAqCH,CAzCD","sourcesContent":["import axios from 'axios';\r\n\r\nexport default async (req,res) => {\r\n    //const deepai = require('deepai');\r\n    //deepai.setApiKey('257b469d-4d3f-4cbd-b834-3a98d4df40ae');\r\n    const {method,query} = req;\r\n    switch(method){\r\n        case 'GET':\r\n            try{\r\n                /*\r\n                const response = await deepai.callStandardApi(\"sentiment-analysis\",{\r\n                    text : query.text\r\n                })\r\n                */\r\n               const response = await axios({\r\n                    url:'/text-generator',\r\n                    headers: {\r\n                        \"api-key\": \"257b469d-4d3f-4cbd-b834-3a98d4df40ae\",\r\n                    },\r\n                    method: \"POST\",\r\n                    baseURL:'https://api.deepai.org/api',\r\n                    data:req.body\r\n               })                \r\n                res.status(200).json({success:true,suggest:response})\r\n            }catch(error){\r\n                console.log(error.response)\r\n                res.status(error.response.status).json({success:false,response})\r\n            }\r\n            break;\r\n        case 'POST':\r\n            try{\r\n                const product = {}\r\n\r\n                res.status(201).json({success:true,data:product})\r\n\r\n            }catch(error){\r\n                res.status(400).json({success:false})\r\n            }\r\n            break;\r\n        default:\r\n            res.status(400).json({success:false})\r\n            break;\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}