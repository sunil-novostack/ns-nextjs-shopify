{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\n/*\r\nimport dbConnect from '../../../lib/mongoose/dbConnect';\r\nimport Product from '../../../lib/mongoose/Product';\r\n\r\ndbConnect();\r\n*/\nimport { connectToDatabase } from '../../../lib/mongoose/dbCon';\nexport default /*#__PURE__*/(function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(req, res) {\n    var _yield$connectToDatab, db, method, headers, query, response, _response;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return connectToDatabase();\n\n          case 2:\n            _yield$connectToDatab = _context.sent;\n            db = _yield$connectToDatab.db;\n            method = req.method, headers = req.headers, query = req.query;\n            _context.t0 = method;\n            _context.next = _context.t0 === 'GET' ? 8 : _context.t0 === 'POST' ? 19 : 30;\n            break;\n\n          case 8:\n            _context.prev = 8;\n            _context.next = 11;\n            return db.collection(headers.shopname + '.settings').findOne();\n\n          case 11:\n            response = _context.sent;\n            res.status(200).json({\n              success: true,\n              settings: response\n            });\n            _context.next = 18;\n            break;\n\n          case 15:\n            _context.prev = 15;\n            _context.t1 = _context[\"catch\"](8);\n            res.status(400).json({\n              success: false\n            });\n\n          case 18:\n            return _context.abrupt(\"break\", 32);\n\n          case 19:\n            _context.prev = 19;\n            _context.next = 22;\n            return db.collection(headers.shopname + '.settings').insert(req.body);\n\n          case 22:\n            _response = _context.sent;\n            res.status(201).json({\n              success: true,\n              data: _response\n            });\n            _context.next = 29;\n            break;\n\n          case 26:\n            _context.prev = 26;\n            _context.t2 = _context[\"catch\"](19);\n            res.status(400).json({\n              success: false,\n              error: _context.t2\n            });\n\n          case 29:\n            return _context.abrupt(\"break\", 32);\n\n          case 30:\n            res.status(400).json({\n              success: false\n            });\n            return _context.abrupt(\"break\", 32);\n\n          case 32:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[8, 15], [19, 26]]);\n  }));\n\n  return function (_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n})();","map":{"version":3,"sources":["E:/novostack/shopify/apps/ns-nextjs-shopify/pages/api/settings/index.js"],"names":["connectToDatabase","req","res","db","method","headers","query","collection","shopname","findOne","response","status","json","success","settings","insert","body","data","error"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA,SAAQA,iBAAR,QAAgC,6BAAhC;AAEA;AAAA,sEAAe,iBAAOC,GAAP,EAAWC,GAAX;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACQF,iBAAiB,EADzB;;AAAA;AAAA;AACJG,YAAAA,EADI,yBACJA,EADI;AAEJC,YAAAA,MAFI,GAEoBH,GAFpB,CAEJG,MAFI,EAEGC,OAFH,GAEoBJ,GAFpB,CAEGI,OAFH,EAEWC,KAFX,GAEoBL,GAFpB,CAEWK,KAFX;AAAA,0BAGJF,MAHI;AAAA,4CAIF,KAJE,uBAYF,MAZE;AAAA;;AAAA;AAAA;AAAA;AAAA,mBAMwBD,EAAE,CAACI,UAAH,CAAcF,OAAO,CAACG,QAAR,GAAiB,WAA/B,EAA4CC,OAA5C,EANxB;;AAAA;AAMOC,YAAAA,QANP;AAOCR,YAAAA,GAAG,CAACS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAACC,cAAAA,OAAO,EAAC,IAAT;AAAcC,cAAAA,QAAQ,EAACJ;AAAvB,aAArB;AAPD;AAAA;;AAAA;AAAA;AAAA;AASCR,YAAAA,GAAG,CAACS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAACC,cAAAA,OAAO,EAAC;AAAT,aAArB;;AATD;AAAA;;AAAA;AAAA;AAAA;AAAA,mBAewBV,EAAE,CAACI,UAAH,CAAcF,OAAO,CAACG,QAAR,GAAiB,WAA/B,EAA4CO,MAA5C,CAAmDd,GAAG,CAACe,IAAvD,CAfxB;;AAAA;AAeON,YAAAA,SAfP;AAgBCR,YAAAA,GAAG,CAACS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAACC,cAAAA,OAAO,EAAC,IAAT;AAAcI,cAAAA,IAAI,EAACP;AAAnB,aAArB;AAhBD;AAAA;;AAAA;AAAA;AAAA;AAkBCR,YAAAA,GAAG,CAACS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAACC,cAAAA,OAAO,EAAC,KAAT;AAAeK,cAAAA,KAAK;AAApB,aAArB;;AAlBD;AAAA;;AAAA;AAsBHhB,YAAAA,GAAG,CAACS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAACC,cAAAA,OAAO,EAAC;AAAT,aAArB;AAtBG;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAf;;AAAA;AAAA;AAAA;AAAA","sourcesContent":["/*\r\nimport dbConnect from '../../../lib/mongoose/dbConnect';\r\nimport Product from '../../../lib/mongoose/Product';\r\n\r\ndbConnect();\r\n*/\r\n\r\nimport {connectToDatabase} from '../../../lib/mongoose/dbCon';\r\n\r\nexport default async (req,res) => {\r\n    const {db} = await connectToDatabase();\r\n    const {method,headers,query} = req;\r\n    switch(method){\r\n        case 'GET':\r\n            try{      \r\n                const response = await db.collection(headers.shopname+'.settings').findOne()\r\n                res.status(200).json({success:true,settings:response})\r\n            }catch(error){\r\n                res.status(400).json({success:false})\r\n            }\r\n            break;\r\n        case 'POST':\r\n            try{\r\n                //const product = await Product.create(req.body)\r\n                const response = await db.collection(headers.shopname+'.settings').insert(req.body)\r\n                res.status(201).json({success:true,data:response})\r\n            }catch(error){\r\n                res.status(400).json({success:false,error:error})\r\n            }\r\n            break;\r\n        default:\r\n            res.status(400).json({success:false})\r\n            break;\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}